apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'androidx.navigation.safeargs.kotlin'
apply plugin: 'kotlin-kapt'
apply plugin: 'dagger.hilt.android.plugin'

//Common
def PACKAGE_NAME = "com.vm.frameworkexample"
def VERSION_CODE = 1

def VERSION_NAME = "0.0.1"

//local
def DOMAIN_URL_LOCAL = "http://192.168.0.112:8000/"

//Dev
def DOMAIN_URL_DEV = "https://reqres.in/"

//Stg
def DOMAIN_URL_STG = "http://167.71.236.237:8080/"

//Prod
def DOMAIN_URL_PROD = "http://167.71.236.237:8080/"

android {
    compileSdkVersion 30
    buildToolsVersion "29.0.3"

    defaultConfig {
        applicationId PACKAGE_NAME
        minSdkVersion 21
        targetSdkVersion 30
        versionCode VERSION_CODE
        versionName VERSION_NAME
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
    }

    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }

    buildTypes {
        debug {
            debuggable true
            jniDebuggable true
            renderscriptDebuggable true
            versionNameSuffix '-debug'
            applicationIdSuffix ".debug"
        }

        release {
            debuggable false
            jniDebuggable false
            renderscriptDebuggable false
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions "default"

    productFlavors{

        local {
            versionName VERSION_NAME + "-local"
            buildConfigField "String", "VERSION_CODE_NAME", "\"${VERSION_NAME}\""
            buildConfigField "String", "DOMAIN_URL", "\"${DOMAIN_URL_LOCAL}\""
            applicationIdSuffix ".dev"
            manifestPlaceholders = [appRoundIcon: "@mipmap/ic_local_launcher_round", appIcon: "@mipmap/ic_local_launcher", appName: "[Local]VmFrameworkExample"]
            buildConfigField "String", "TEST_USERNAME", "\"VmFrameworkExample@VmFrameworkExample.com\""
            buildConfigField "String", "TEST_PASSWORD", "\"testuser\""
        }

        dev {
            versionName VERSION_NAME + "-dev"
            buildConfigField "String", "VERSION_CODE_NAME", "\"${VERSION_NAME}\""
            buildConfigField "String", "DOMAIN_URL", "\"${DOMAIN_URL_DEV}\""
            applicationIdSuffix ".dev"
            manifestPlaceholders = [appRoundIcon: "@mipmap/ic_dev_launcher_round", appIcon: "@mipmap/ic_dev_launcher", appName: "[Dev]VmFrameworkExample"]
            buildConfigField "String", "TEST_USERNAME", "\"VmFrameworkExample@VmFrameworkExample.com\""
            buildConfigField "String", "TEST_PASSWORD", "\"testuser\""
        }

        stg{
            versionName VERSION_NAME + "-stg"
            buildConfigField "String", "VERSION_CODE_NAME", "\"${VERSION_NAME}\""
            buildConfigField "String", "DOMAIN_URL", "\"${DOMAIN_URL_STG}\""
            applicationIdSuffix ".stg"
            manifestPlaceholders = [appRoundIcon: "@mipmap/ic_stg_launcher_round", appIcon: "@mipmap/ic_stg_launcher", appName: "[Stg]VmFrameworkExample"]
            buildConfigField "String", "TEST_USERNAME", "\"VmFrameworkExample@VmFrameworkExample.com\""
            buildConfigField "String", "TEST_PASSWORD", "\"testuser\""
        }

        prod {
            versionName VERSION_NAME + "-prod"
            buildConfigField "String", "VERSION_CODE_NAME", "\"${VERSION_NAME}\""
            buildConfigField "String", "DOMAIN_URL", "\"${DOMAIN_URL_PROD}\""
            manifestPlaceholders = [appRoundIcon: "@mipmap/ic_launcher_round", appIcon: "@mipmap/ic_launcher", appName: "VmFrameworkExample"]
            buildConfigField "String", "TEST_USERNAME", "\"\""
            buildConfigField "String", "TEST_PASSWORD", "\"\""
        }
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    compileOptions {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }

    android.defaultConfig.vectorDrawables.useSupportLibrary = true
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation project(path: ':vm-framework')

    def work_version = "2.5.0"
    implementation "androidx.work:work-runtime-ktx:$work_version"
    kapt 'androidx.hilt:hilt-compiler:1.0.0'
    implementation 'androidx.hilt:hilt-work:1.0.0'
    kapt "com.google.dagger:hilt-android-compiler:$hilt_version"
    kapt "com.google.dagger:hilt-compiler:$hilt_version"
    implementation "com.google.dagger:hilt-android:$hilt_version"

    testImplementation 'joda-time:joda-time:2.9.3'
    testImplementation 'junit:junit:4.13'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
}
