plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-android-extensions'
    id 'androidx.navigation.safeargs.kotlin'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
}

//Common
def PACKAGE_NAME = "com.vm.frameworkexample"
def VERSION_CODE = 1

def VERSION_NAME = "0.0.1"

//local
def DOMAIN_URL_LOCAL = "http://192.168.0.112:8000/"

//Dev
def DOMAIN_URL_DEV = "https://reqres.in/"

//Stg
def DOMAIN_URL_STG = "http://167.71.236.237:8080/"

//Prod
def DOMAIN_URL_PROD = "http://167.71.236.237:8080/"

android {
    compileSdkVersion 31

    defaultConfig {
        applicationId PACKAGE_NAME
        minSdkVersion 21
        targetSdkVersion 31
        versionCode VERSION_CODE
        versionName VERSION_NAME
        testInstrumentationRunner "com.vm.frameworkexample.CustomTestRunner"
        multiDexEnabled true
        archivesBaseName = "$versionName(v$versionCode)"
        javaCompileOptions {
            annotationProcessorOptions {
                arguments += ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
    }

    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }

    buildTypes {
        debug {
            debuggable true
            jniDebuggable true
            renderscriptDebuggable true
            versionNameSuffix '-debug'
            applicationIdSuffix ".debug"
        }

        release {
            debuggable false
            jniDebuggable false
            renderscriptDebuggable false
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions "default"

    productFlavors{

        local {
            versionName VERSION_NAME + "-local"
            buildConfigField "String", "VERSION_CODE_NAME", "\"${VERSION_NAME}\""
            buildConfigField "String", "DOMAIN_URL", "\"${DOMAIN_URL_LOCAL}\""
            applicationIdSuffix ".dev"
            manifestPlaceholders = [appRoundIcon: "@mipmap/ic_local_launcher_round", appIcon: "@mipmap/ic_local_launcher", appName: "[Local]VmFrameworkExample"]
            buildConfigField "String", "TEST_USERNAME", "\"VmFrameworkExample@VmFrameworkExample.com\""
            buildConfigField "String", "TEST_PASSWORD", "\"testuser\""
        }

        dev {
            versionName VERSION_NAME + "-dev"
            buildConfigField "String", "VERSION_CODE_NAME", "\"${VERSION_NAME}\""
            buildConfigField "String", "DOMAIN_URL", "\"${DOMAIN_URL_DEV}\""
            applicationIdSuffix ".dev"
            manifestPlaceholders = [appRoundIcon: "@mipmap/ic_dev_launcher_round", appIcon: "@mipmap/ic_dev_launcher", appName: "[Dev]VmFrameworkExample"]
            buildConfigField "String", "TEST_USERNAME", "\"VmFrameworkExample@VmFrameworkExample.com\""
            buildConfigField "String", "TEST_PASSWORD", "\"testuser\""
        }

        stg{
            versionName VERSION_NAME + "-stg"
            buildConfigField "String", "VERSION_CODE_NAME", "\"${VERSION_NAME}\""
            buildConfigField "String", "DOMAIN_URL", "\"${DOMAIN_URL_STG}\""
            applicationIdSuffix ".stg"
            manifestPlaceholders = [appRoundIcon: "@mipmap/ic_stg_launcher_round", appIcon: "@mipmap/ic_stg_launcher", appName: "[Stg]VmFrameworkExample"]
            buildConfigField "String", "TEST_USERNAME", "\"VmFrameworkExample@VmFrameworkExample.com\""
            buildConfigField "String", "TEST_PASSWORD", "\"testuser\""
        }

        prod {
            versionName VERSION_NAME + "-prod"
            buildConfigField "String", "VERSION_CODE_NAME", "\"${VERSION_NAME}\""
            buildConfigField "String", "DOMAIN_URL", "\"${DOMAIN_URL_PROD}\""
            manifestPlaceholders = [appRoundIcon: "@mipmap/ic_launcher_round", appIcon: "@mipmap/ic_launcher", appName: "VmFrameworkExample"]
            buildConfigField "String", "TEST_USERNAME", "\"\""
            buildConfigField "String", "TEST_PASSWORD", "\"\""
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    kotlinOptions {
        jvmTarget = "11"
    }

    sourceSets {
        androidTest {
            java.srcDirs += "src/sharedTest/java"
        }
        test {
            java.srcDirs += "src/sharedTest/java"
        }
    }

    android.defaultConfig.vectorDrawables.useSupportLibrary = true

}

kapt {
    javacOptions {
        option("-Adagger.hilt.android.internal.disableAndroidSuperclassValidation=true")
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation project(path: ':vm-framework')

    def work_version = "2.7.1"
    implementation "androidx.work:work-runtime-ktx:$work_version"
    kapt 'androidx.hilt:hilt-compiler:1.0.0'
    implementation 'androidx.hilt:hilt-work:1.0.0'
    kapt "com.google.dagger:hilt-android-compiler:$hilt_version"
    kapt "com.google.dagger:hilt-compiler:$hilt_version"
    implementation "com.google.dagger:hilt-android:$hilt_version"

    testImplementation 'joda-time:joda-time:2.9.3'
    // Local Unit Tests
    implementation "androidx.test:core:1.4.0"
    testImplementation "junit:junit:4.13.2"
    testImplementation "org.hamcrest:hamcrest-all:1.3"
    testImplementation "androidx.arch.core:core-testing:2.1.0"
    testImplementation "org.robolectric:robolectric:4.5.1"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.5.0"
    testImplementation "com.google.truth:truth:1.0.1"

    // Instrumented Unit Tests
    androidTestImplementation "junit:junit:4.13.2"
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.5.0"
    androidTestImplementation "androidx.arch.core:core-testing:2.1.0"
    androidTestImplementation "com.google.truth:truth:1.0.1"
    testImplementation 'androidx.test.ext:truth:1.4.0'
    androidTestImplementation 'androidx.test.ext:truth:1.4.0'

    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation('androidx.test.espresso:espresso-intents:3.4.0')
    androidTestImplementation('androidx.test:runner:1.4.0')
    androidTestImplementation('androidx.test:rules:1.4.0')

    testImplementation("com.google.dagger:hilt-android-testing:2.40.3")
    kaptTest("com.google.dagger:hilt-android-compiler:2.40.3")

    androidTestImplementation 'com.google.dagger:hilt-android-testing:2.40.3'
    kaptAndroidTest 'com.google.dagger:hilt-android-compiler:2.40.3'

    debugImplementation "androidx.fragment:fragment-testing:1.4.0"
    androidTestImplementation 'androidx.test.espresso:espresso-contrib:3.4.0'




    androidTestImplementation("androidx.work:work-testing:$work_version")

    testImplementation group: 'org.mockito', name: 'mockito-core', version: '3.11.2'
    // Having the actual dependency helps, instead of removing it by accident
    // when adding the fix originally present, which is also not needed anymore.
    androidTestImplementation "org.mockito:mockito-android:3.11.2"
    testImplementation "org.mockito:mockito-inline:3.11.2"
}
